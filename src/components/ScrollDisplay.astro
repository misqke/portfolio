---
const { items } = Astro.props;
const half = Math.floor(items.length / 2);
---

<div class="scroll-display">
  <div class="scroll-display-track">
    {
      items.map((item, index) => {
        return (
          <span
            class={
              index == half
                ? "scroll-item active fade-in"
                : "scroll-item fade-in"
            }
            style={`background-image: url("lake.jpg")`}
            scroll-anim
          >
            {/* <img src="lake.jpg" /> */}
            <h3 class="section-title">{item.title}</h3>
            <p>{item.description}</p>
          </span>
        );
      })
    }
  </div>
  <div></div>
</div>

<script>
  // @ts-nocheck
  const scrollItems = document.querySelectorAll(".scroll-item");
  const containerHeight =
    document.querySelector(".projects-inner").scrollHeight;
  scrollItems.forEach((item, index) => {
    if (window.innerWidth > 700)
      item.style.height = `${containerHeight * 0.75}px`;

    item.addEventListener("click", () => {
      scrollItems.forEach((innerItem) => innerItem.classList.remove("active"));
      scrollItems[index].classList.add("active");
    });
  });
</script>

<style>
  .scroll-display {
    display: flex;
    flex-direction: column;
    width: 100%;
    align-items: center;
  }
  .scroll-display-track {
    width: 100%;
    overflow: hidden;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-evenly;
    gap: 1rem;
    padding: 1rem;
  }
  .scroll-item {
    display: inline;
    border: 2px solid var(--primary);
    width: 4rem;
    overflow: hidden;
    position: relative;
    transition:
      width 500ms,
      opacity 1000ms;
    cursor: pointer;
    background-size: cover;
    background-position: center;
    background-color: #0006;
    background-blend-mode: darken;
    background-repeat: no-repeat;
    height: 500px;
    border-radius: var(--border-radius);
    /* flex-grow: 1; */
  }
  .scroll-item img {
    object-fit: cover;
    width: calc(70vw - 1rem);
    height: auto;
    object-position: center;
    display: inline;
  }
  .scroll-item p {
    opacity: 0;
    position: absolute;
    left: 0.75rem;
    bottom: 0.75rem;
  }
  .scroll-item.active p {
    animation: show ease-in 1000ms forwards;
  }
  .scroll-item h3 {
    position: absolute;
    bottom: 2rem;
    font-size: 1.5rem;
    left: 1.75rem;
    /* color: #fff; */
    text-wrap: nowrap;
    transform-origin: left;
    transform: rotateZ(-90deg);
  }
  .scroll-item.active {
    width: 70vw;
    cursor: default;
    box-shadow: var(--shadow);
  }

  .scroll-item.active h3 {
    transform: rotateZ(0deg);
    left: 1rem;
    top: 1rem;
  }

  @keyframes show {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @media screen and (max-width: 700px) {
    .scroll-display-track {
      flex-direction: column;
      align-items: center;
      justify-content: space-evenly;
      gap: 1rem;
      padding: 1rem;
    }
    .scroll-item {
      display: block;
      width: 90vw;
      height: 4rem;
      transition: height 500ms;
    }
    .scroll-item.active {
      width: 90vw;
      height: 500px;
      cursor: default;
      box-shadow: var(--shadow);
    }
    .scroll-item h3 {
      position: absolute;
      top: 1rem;
      font-size: 1.5rem;
      left: 1.75rem;
      color: #fff;
      text-wrap: nowrap;
      transform-origin: left;
      transform: rotateZ(0deg);
    }
  }
</style>
